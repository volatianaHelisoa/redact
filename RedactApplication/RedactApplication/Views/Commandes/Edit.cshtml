@model RedactApplication.Models.COMMANDEViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/LayoutConnected.cshtml";

}

<main id="wrapper">
    <div id="single-container">
        <div class="onglets">
            <ul>
                <li><a href="">Utilisateurs</a></li>
                <li><a href="" class="active">Commandes</a></li>
                <li><a href="">Dolor sit amet</a></li>
            </ul>
        </div>
        <div class="card back-office with-shadow">
            <div class="head">
                <i class="icon icon-edit-command"></i>
                <h1>Editer commande</h1>
                <p>Veuillez remplir les champs Requis et appuyez sur Enregistrer pour éditer une commande</p>
            </div>
            @using (Html.BeginForm("EditCommande", "Commandes", FormMethod.Post, new { @class = "formfields" }))
            {
                @Html.AntiForgeryToken()
                <!-- Champs -->
                <input type="hidden" name="idCommande" value="@Model.commandeId">

                if (@Session["role"] != null && @Session["role"].ToString() != "2")
                {
                    <section class="clearfix">
                        <label for="" class="col-50 pull-left">
                            Projet
                            @Html.DropDownListFor(x => Model.listprojetId, new SelectList(Model.ListProjet, "Value", "Text"), htmlAttributes: new { @id = "SelectItemProjet" })
                        </label>
                        <label for="" class="col-50 pull-right">
                            Thématique
                            @Html.DropDownListFor(x => Model.listThemeId, new SelectList(Model.ListTheme, "Value", "Text"), htmlAttributes: new { id = "SelectItemTheme" })
                        </label>
                        <label for="" class="col-50 pull-left">
                            Rédacteur
                            @Html.DropDownListFor(x => Model.listRedacteurId, new SelectList(Model.ListRedacteur, "Value", "Text"), htmlAttributes: new { id = "SelectItemRedacteur" })
                        </label>
                        <label for="" class="col-50 pull-right">
                            Type de texte
                            @Html.DropDownListFor(x => Model.listCommandeTypeId, new SelectList(Model.ListCommandeType, "Value", "Text"), htmlAttributes: new { @id = "SelectItemCommandeType" })
                        </label>
                    </section>
                    <section class="clearfix">
                        <div class="section-title">
                            <span>Mots clés</span>
                        </div>

                        <label for="" class="col-50 pull-left">
                            Mot clé principal
                            @Html.TextBoxFor(x => x.mot_cle_pricipal, new { @name = "name" })
                        </label>
                        <label for="" class="col-50 pull-right">
                            Mot clé secondaire
                            @Html.TextBoxFor(x => x.mot_cle_secondaire, new { @name = "name" })
                        </label>
                        <label for="" class="col-50 pull-left">
                            Texte d'ancrage
                            @Html.TextBoxFor(x => x.texte_ancrage, new { @name = "name" })
                        </label>
                        <label for="" class="col-50 pull-right">
                            Nombre de mots
                            @Html.TextBoxFor(x => x.nombre_mots, new { @name = "name" })

                        </label>
                    </section>
                    <section class="clearfix">
                        <div class="section-title">
                            <span>Consignes</span>
                        </div>

                        <label for="" class="col-50 pull-left">
                            Références
                            @Html.TextAreaFor(x => x.consigne_references, new { @name = "name" })
                        </label>
                        <label for="" class="col-50 pull-right">
                            Autres
                            @Html.TextBoxFor(x => x.consigne_autres, new { @name = "name" })
                        </label>
                        <label for="" class="col-50 pull-left">
                            Type de contenu
                            @Html.DropDownListFor(x => Model.listContenuTypeId, new SelectList(Model.ListContenuType, "Value", "Text"), htmlAttributes: new { @id = "SelectItemContenuType" })
                        </label>
                        <label for="" class="col-50 pull-right">
                            Date de livraison
                            @Html.TextBoxFor(x => x.date_livraison, "{0:dd/MM/yyyy}", new { type = "text" })
                            @Html.ValidationMessageFor(m => m.date_livraison)
                        </label>
                        <span class="pull-left" style="margin-bottom: 20px;">
                            Notification sms
                            <input type="checkbox" id="SavePass" style="display: inline-block; width: auto; vertical-align: middle; margin: 0 0 0 10px;">
                        </span>

                        <!-- WYSIWYG ICI -->
                    </section>
                }
                <section class="clearfix submit-area">
                    <input type="submit" value="Enregistrer" class="btn btn-success" />
                    @Html.ActionLink("Annuler", "ListCommandes", "Commandes", new { @class = "btn btn-warning" })
                </section>
            }
        </div>
    </div>
</main>
<!--  Dialogue succès ajout user   -->
    <div id="addUserPopUp">

    </div>

    <!--  Dialogue error valid data   -->
    <div id="errorValidDataUserPopUp">

    </div>
    @section Scripts
{
        <link rel="stylesheet" href="~/Content/css/bootstrap-datepicker3.css" />
        <script type="text/javascript" src="~/Scripts/js/bootstrap-datepicker.min.js"></script>
        <script type="text/javascript" src="~/Scripts/scriptredacteur.js"></script>
        <script type="text/javascript" src="~/Scripts/summernote.js"></script>
        <link href="~/Content/css/summernote.css" rel="stylesheet">
        

        <script type="text/javascript">
        $(document).ready(function() {
            var date = new Date();
			date.setDate(date.getDate());
			 var date_input = $('input[name="date_livraison"]'); //our date input has the name "date"
            var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";
            var options = {
                format: 'dd/mm/yyyy',
                container: container,
                todayHighlight: true,
                autoclose: true,
                weekStart: 1,
				startDate: date
            };
            date_input.datepicker(options);






            //$('.textarea-editor').wysihtml5();
            $('.textarea-editor').summernote(
                {
                    height: 300,
                    minHeight: null,
                    maxHeight: null,
                    focus: true
                });

            $(".note-editable").keyup(function() {

                var contenu = $.trim($(this).text());
                var charLength = contenu.length ;
                var charLimit = $("#limit").val();
                console.log(charLimit);
                console.log(charLength);

                // Displays count
                $(".left_char").html(charLength + " sur " + charLimit + " caractère(s) utilisé(s)");
                // Alert when max is reached
                if (charLength > charLimit) {
                    $(".left_char").html("<strong>Le nombre de caractères maximum de " +
                        charLimit +
                        " atteint.</strong>");
                }
            });
        });


        </script>
    }

@*<main class="wrapperpages">
    <div class="page pagesDivision clear">



        <section class="column2 rightDivision fullWidth">
            <div class="rowpad">
                <div>
                    <div class="admin-link-menu">

                        <a href="~/Home/ListeUser" class="admin-link ">Utilisateurs</a>
                        <a href="~/Commandes/ListCommandes" class="admin-link active">Commandes</a>
                    </div>
                    <!-- end admin menu -->
                </div>
                <div id="divisionContent">
                    <div class="breadcrumb">
                        <span>Commandes > Editer commande</span>
                        <hr />
                    </div>
                    <!-- top panel -->
                    <div id="inner-top-panel" class="hidepanel clear">
                        <div class="left search-bloc">
                            <form method="get" action="" class="usr-srch">
                                <div class="usr-srch--input-wrapper">
                                    <input class="usr-srch--input" type="search" placeholder="Search" />
                                </div>
                                <input class="usr-srch--submit" type="submit" value="&#xf002;">
                            </form>
                        </div>

                        <div class="right usr-create">
                            <a href="#" title="Creer commande" class="green-btn">Editer commande</a>
                        </div>
                    </div>
                    <!-- end top panel -->
                    
                @if (@Session["role"] == null)
                {
                    <label class="error-msg ltl-consign">Veuillez vous reconnecter car votre session est expirée.</label>
                }

                    <div class="useredits innerform-container">
                        <i class="fa fa-3x"><img src="~/images/icon-create-custom.png" alt="Photo icon profil"></i>
                        <h3>Editer commande</h3>
                        <span class="ltl-consign"><i class="fa fa-info-circle"></i> Veuillez remplir les champ requis et appuyez sur Enregistrer pour éditer une commande</span>

                        @if (ViewBag.ErrorMessage != null)
                        {
                            <label class="error-msg ltl-consign">Veuillez sélectionner un élément de chaque.</label>
                        }
                        @if (Session["VolumeInfo"] != null)
                        {
                            <label class="error-msg ltl-consign"> @Session["VolumeInfo"] </label>
                        }

                        <div class="dashCreate-user item-container">

                            <div class="center_blc">
                                @using (Html.BeginForm("EditCommande", "Commandes", FormMethod.Post, new { @class = "formfields" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <fieldset>
                                        <div class="inline-form clr">
                                            <div>
                                                <input type="hidden" name="idCommande" value="@Model.commandeId">
                                                <input type="hidden" id="limit"  value="@Model.nombre_mots">
                                            </div>
                                            
                                          
                                            @if (@Session["role"] != null && @Session["role"].ToString() != "2")
                                            {
                                                <div>
                                                    <label>
                                                        <span>Projet</span>
                                                        @Html.DropDownListFor(x => Model.listprojetId, new SelectList(Model.ListProjet, "Value", "Text"), htmlAttributes: new {@class = "form-control", @id = "SelectItemProjet"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Thèmatique</span>
                                                        @Html.DropDownListFor(x => Model.listThemeId, new SelectList(Model.ListTheme, "Value", "Text"), htmlAttributes: new {@class = "form-control", id = "SelectItemTheme"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Rédacteur</span>
                                                        @Html.DropDownListFor(x => Model.listRedacteurId, new SelectList(Model.ListRedacteur, "Value", "Text"), htmlAttributes: new {@class = "form-control", id = "SelectItemRedacteur"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Type de texte</span>
                                                        @Html.DropDownListFor(x => Model.listCommandeTypeId, new SelectList(Model.ListCommandeType, "Value", "Text"), htmlAttributes: new {@class = "form-control", @id = "SelectItemCommandeType"})
                                                    </label>
                                                </div>
                                                <div>Mots clés </div>
                                                <div>
                                                    <label>
                                                        <span>Mot clé principal</span>
                                                        @Html.TextBoxFor(x => x.mot_cle_pricipal, new {@class = "input", @name = "name"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Mot clé secondaire</span>
                                                        @Html.TextBoxFor(x => x.mot_cle_secondaire, new {@class = "input", @name = "name"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Texte d'ancrage</span>
                                                        @Html.TextBoxFor(x => x.texte_ancrage, new {@class = "input", @name = "name"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Nombre de mots</span>
                                                        @Html.TextBoxFor(x => x.nombre_mots, new {@class = "input", @name = "name"})
                                                    </label>
                                                </div>
                                                <div>Consignes </div>
                                                <div>
                                                    <label>
                                                        <span>Références</span>
                                                        @Html.TextAreaFor(x => x.consigne_references, new {@class = "input", @name = "name"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Autres</span>
                                                        @Html.TextBoxFor(x => x.consigne_autres, new {@class = "input", @name = "name"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Type du contenu</span>
                                                        @Html.DropDownListFor(x => Model.listContenuTypeId, new SelectList(Model.ListContenuType, "Value", "Text"), htmlAttributes: new {@class = "form-control", @id = "SelectItemContenuType"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Date de livraison</span>
                                                        @Html.TextBoxFor(x => x.date_livraison, "{0:dd/MM/yyyy}", new {@class = "input form-control", type = "text"})
                                                        @Html.ValidationMessageFor(m => m.date_livraison)
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Notifier via SMS ?</span>
                                                        <input id="responsable" name="checkResp" type="checkbox"/>
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Statut</span>
                                                        @Html.DropDownListFor(x => Model.listStatutId, new SelectList(Model.ListStatut, "Value", "Text"), htmlAttributes: new {@class = "form-control", @id = "SelectItemStatut"})
                                                    </label>
                                                </div>
                                            }

                                         
                                                <div>
                                                    <label>
                                                        <span>Titre</span>
                                                        @Html.TextBoxFor(x => x.balise_titre, new {@class = "input", @name = "name"})
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <span>Contenu</span>
                                                        @Html.TextAreaFor(m => m.contenu_livre, new { rows = "20", style = "resize:none;width:400px;", @class = "form-control input-lg textarea-editor" ,maxlength= @Html.DisplayNameFor(m => m.nombre_mots) })
                                                    </label>
                                                    <span class="left_char">0 sur <div id="data-limit-input">@Html.DisplayFor(model => model.nombre_mots)</div> caractère(s) utilisé(s)</span>
                                                   
                                                </div>
                                           


                                            <div class="clear"></div>

                                            <div id="divCampaignManager left_b1">

                                                <div class="divisionSelect">
                                                    <div class="btn-submit sav_us1">

                                                        <button type="submit" value="Save" id="sendmessage" >Save</button>

                                                        @Html.ActionLink("Cancel", "ListCommandes", "Commandes", new {}, new {@class = "resetbtn cacel_us1 left_b1"})
                                                    </div>

                                                </div>
                                            </div>

                                        </div>
                                    </fieldset>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </section>
    </div>
</main>
<!--  Dialogue succès ajout user   -->
<div id="addUserPopUp">

</div>

<!--  Dialogue error valid data   -->
<div id="errorValidDataUserPopUp">

</div>
@section Scripts
{
    <link rel="stylesheet" href="~/Content/css/bootstrap-datepicker3.css"/>
    <script type="text/javascript" src="~/Scripts/js/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript" src="~/Scripts/scriptredacteur.js"></script>
    <script type="text/javascript" src="~/Scripts/summernote.js"></script>
    <link href="~/Content/css/summernote.css" rel="stylesheet">
    

    <script type="text/javascript">
        $(document).ready(function() {
            var date = new Date();
			date.setDate(date.getDate());
			 var date_input = $('input[name="date_livraison"]'); //our date input has the name "date"
            var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";
            var options = {
                format: 'dd/mm/yyyy',
                container: container,
                todayHighlight: true,
                autoclose: true,
                weekStart: 1,
				startDate: date
            };
            date_input.datepicker(options);

			

			
			
			
            //$('.textarea-editor').wysihtml5();
            $('.textarea-editor').summernote(
                {
                    height: 300,
                    minHeight: null,
                    maxHeight: null,
                    focus: true
                });

            $(".note-editable").keyup(function() {

                var contenu = $.trim($(this).text());
                var charLength = contenu.length ;
                var charLimit = $("#limit").val();
                console.log(charLimit);
                console.log(charLength);
                 
                // Displays count
                $(".left_char").html(charLength + " sur " + charLimit + " caractère(s) utilisé(s)");
                // Alert when max is reached
                if (charLength > charLimit) {
                    $(".left_char").html("<strong>Le nombre de caractères maximum de " +
                        charLimit +
                        " atteint.</strong>");
                }
            });
        });


    </script>
}*@